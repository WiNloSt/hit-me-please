# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          keys:
            - build-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum ".circleci/config.yml" }}
            - build-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - build-packages-{{ .Branch }}
      - run:
          name: Install pipenv
          command: |
            sudo pip install pipenv
      - run:
          name: Install dependencies
          command: |
            pipenv install
      - save_cache:
          key: build-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.local/share/virtualenvs/
      - run:
          name: Run test
          command: |
            cd hit_me_please
            pipenv run python manage.py test

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and push image
          command: |
            docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            docker build -t winlost/hitme:live .
            docker push winlost/hitme:live
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          keys:
            - deploy-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum ".circleci/config.yml" }}
            - deploy-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - deploy-packages-{{ .Branch }}
      - run:
          name: Install deployment dependencies
          command: |
            cd ansible
            pipenv install
      - save_cache:
          key: deploy-packages-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.local/share/virtualenvs/
      - run:
          name: Deploy code
          command: |
            cd ansible
            pipenv run ./deploy.bash

# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  build_and_test:
    jobs:
      - build
      - deploy:
          requires:
            - build
